"""Checkout  cart UI tests"""
import logging
import pytest
from common.utils.logger import configure_log
from ui.facade.login import Login_facade
from ui.facade.store import Store_facade
from ui.facade.cart import Cart_facade
from common.utils.common import generate_test_params


LOG = configure_log(logging.INFO, __name__, "test_add_to_cart_ui.log")
test_params = generate_test_params(__file__)
LOG.info("Test params {}".format(test_params))

class TestCheckout(object):

	@pytest.mark.parametrize(["testcase","req", "response", "metadata"], test_params)
	def test_checkout_from_cart(self, rest, driver, testcase, req, response, metadata):
		"""
		Tests checkouts from the cart for products generated by test params
		Args:
			rest: REST object for all rest operations
			driver: selenium webdriver object
			testcase: testcaase name
			req: request for REST login calls
			response: response for REST login calls
			metadata: metadata for the test
		"""
		driver.get("http://localhost:3000")
		# First login
		login = Login_facade(driver)
		login.login()
		store = Store_facade(rest, driver)

        # Adding the product of quantity specified to cart
		LOG.info("Adding {product_name} of quantity {quantity} to the cart".format(product_name=metadata["product_name"],
									     quantity=metadata["quantity"]))
		store.add_to_cart(product_name=metadata["product_name"], quantity=metadata["quantity"])
		
        # Navigate to cart and checkout(or Buy)
		store.navigate_to_cart()
		cart = Cart_facade(driver)
		cart.checkout_from_cart()
		